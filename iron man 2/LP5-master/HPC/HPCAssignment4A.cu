{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPke0Qa+mUDWdgJdybLuVgM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dnBqJlSC2xYr","executionInfo":{"status":"ok","timestamp":1685000528623,"user_tz":-330,"elapsed":4,"user":{"displayName":"S227 Bankar Abhishek","userId":"04360172329345035178"}},"outputId":"cebf7c92-6b01-4efa-ec0b-a3866b591753"},"outputs":[{"output_type":"stream","name":"stdout","text":["nvcc: NVIDIA (R) Cuda compiler driver\n","Copyright (c) 2005-2022 NVIDIA Corporation\n","Built on Wed_Sep_21_10:33:58_PDT_2022\n","Cuda compilation tools, release 11.8, V11.8.89\n","Build cuda_11.8.r11.8/compiler.31833905_0\n"]}],"source":["!nvcc --version"]},{"cell_type":"code","source":["code = \"\"\"\n","\n","#include <stdio.h>\n","#include <stdlib.h>\n","\n","#define N 1000000\n","\n","__global__ void add(int *a, int *b, int *c) {\n","    int tid = blockIdx.x * blockDim.x + threadIdx.x;\n","    if (tid < N) {\n","        c[tid] = a[tid] + b[tid];\n","    }\n","}\n","\n","int main() {\n","    int *a, *b, *c;\n","    int *d_a, *d_b, *d_c;\n","    int size = N * sizeof(int);\n","\n","    // Allocate memory on host\n","    a = (int*)malloc(size);\n","    b = (int*)malloc(size);\n","    c = (int*)malloc(size);\n","\n","    // Initialize arrays\n","    for (int i = 0; i < N; i++) {\n","        a[i] = i;\n","        b[i] = i * 2;\n","    }\n","\n","    // Allocate memory on device\n","    cudaMalloc(&d_a, size);\n","    cudaMalloc(&d_b, size);\n","    cudaMalloc(&d_c, size);\n","\n","    // Copy data from host to device\n","    cudaMemcpy(d_a, a, size, cudaMemcpyHostToDevice);\n","    cudaMemcpy(d_b, b, size, cudaMemcpyHostToDevice);\n","\n","    // Launch kernel with 1 million threads\n","    add<<<(N + 255) / 256, 256>>>(d_a, d_b, d_c);\n","\n","    // Copy result from device to host\n","    cudaMemcpy(c, d_c, size, cudaMemcpyDeviceToHost);\n","\n","    // Print first and last elements of result\n","    printf(\"c[0]=%d, c[%d] = %d\",c[0],N-1,c[N-1]);\n","\n","    // Free memory\n","    free(a);\n","    free(b);\n","    free(c);\n","    cudaFree(d_a);\n","    cudaFree(d_b);\n","    cudaFree(d_c);\n","\n","    return 0;\n","}\n","\"\"\""],"metadata":{"id":"p_KPz8nK2y1S","executionInfo":{"status":"ok","timestamp":1685001637052,"user_tz":-330,"elapsed":9,"user":{"displayName":"S227 Bankar Abhishek","userId":"04360172329345035178"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["text_file = open(\"HPCAssignemnt4A.cu\",\"w\")\n","text_file.write(code)\n","text_file.close()"],"metadata":{"id":"BO39xVKH3Gdd","executionInfo":{"status":"ok","timestamp":1685001682287,"user_tz":-330,"elapsed":9,"user":{"displayName":"S227 Bankar Abhishek","userId":"04360172329345035178"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["!nvcc HPCAssignemnt4A.cu"],"metadata":{"id":"k7IneBms7TKK","executionInfo":{"status":"ok","timestamp":1685001752587,"user_tz":-330,"elapsed":2465,"user":{"displayName":"S227 Bankar Abhishek","userId":"04360172329345035178"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["!./a.out"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K5eOfMZ77WyZ","executionInfo":{"status":"ok","timestamp":1685001772466,"user_tz":-330,"elapsed":7,"user":{"displayName":"S227 Bankar Abhishek","userId":"04360172329345035178"}},"outputId":"f9e93941-3645-4ebd-ef75-c0b1949b9585"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["c[0]=0, c[999999] = 0"]}]},{"cell_type":"code","source":["!nvprof ./a.out"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7TmwGhBa7pRn","executionInfo":{"status":"ok","timestamp":1685001793902,"user_tz":-330,"elapsed":833,"user":{"displayName":"S227 Bankar Abhishek","userId":"04360172329345035178"}},"outputId":"62a475fe-65e7-4ca4-d143-b8c900ffeda5"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["======== Warning: unable to locate cuda driver library, GPU profiling skipped\n","c[0]=0, c[999999] = 0======== Warning: No profile data collected.\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"2ZaxwNgB7uUv"},"execution_count":null,"outputs":[]}]}